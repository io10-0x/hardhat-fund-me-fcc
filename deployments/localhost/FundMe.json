{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pricefeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperwithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getamountfunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getfunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getowner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getpricefeedaddress",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4a6f2cb2749f0c7e0595d3c2fdfd9fafda649698df425b8f639bd77c513ff7e9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1068746",
    "logsBloom": "0x
    "blockHash": "0xb0efcc0506a6f13a157310a99468d6f02f86643d893722b8782fe5c99fc1f9ce",
    "transactionHash": "0x4a6f2cb2749f0c7e0595d3c2fdfd9fafda649698df425b8f639bd77c513ff7e9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1068746",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a29d4e7826744f4ca10ab878793d5109",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pricefeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperwithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getamountfunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getfunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getowner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getpricefeedaddress\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private  /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_pricefeedaddress;\\n    \\n    constructor(address pricefeed) {\\n        i_owner = msg.sender;\\n        s_pricefeedaddress =AggregatorV3Interface(\\n            pricefeed\\n        );\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_pricefeedaddress) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperwithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex=0; funderIndex <funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n//getters\\n    function getfunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n    function getowner() public view returns(address){\\n        return i_owner;\\n    }\\n    function getamountfunded(address account) public view returns(uint256){\\n        return s_addressToAmountFunded[account];\\n    }\\n    function getpricefeedaddress() public view returns(AggregatorV3Interface){\\n        return s_pricefeedaddress;\\n    }\\n}\\n\\n\",\"keccak256\":\"0xf9402a0dfa495e8ff6915929f5407cb3e6febee4341ea74504e6e6952e1a2e4f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xe877c3c42030955cd412d80e3992e641a18df43247495d4ef29b1254c1635a09\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012f8380380620012f883398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b61118c806200016c6000396000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610140578063b60d42881461016b578063cab865f114610175578063fe0174bd146101a05761008e565b806335ff018c146100985780633726102d146100d55780633ccfd60b1461011257806367bf350b146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac4565b610305565b6040516100cc9190610b0a565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b51565b61034d565b6040516101099190610b8d565b60405180910390f35b34801561011e57600080fd5b50610127610395565b005b34801561013557600080fd5b5061013e6105d7565b005b34801561014c57600080fd5b5061015561087d565b6040516101629190610b0a565b60405180910390f35b6101736101cb565b005b34801561018157600080fd5b5061018a61088a565b6040516101979190610c07565b60405180910390f35b3480156101ac57600080fd5b506101b56108b4565b6040516101c29190610b8d565b60405180910390f35b6802b5e3af16b188000061020a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108de90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c7f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cce565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061036357610362610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c75760006001828154811061044257610441610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104bf90610d53565b91505061041f565b50600067ffffffffffffffff8111156104e3576104e2610d9c565b5b6040519080825280602002602001820160405280156105115781602001602082028036833780820191505090505b50600190805190602001906105279291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054e90610dfc565b60006040518083038185875af1925050503d806000811461058b576040519150601f19603f3d011682016040523d82523d6000602084013e610590565b606091505b50509050806105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90610e5d565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610698575b5050505050905060005b815181101561076c57600082828151811061070a57610709610d24565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076490610d53565b9150506106ec565b50600067ffffffffffffffff81111561078857610787610d9c565b5b6040519080825280602002602001820160405280156107b65781602001602082028036833780820191505090505b50600190805190602001906107cc9291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f390610dfc565b60006040518083038185875af1925050503d8060008114610830576040519150601f19603f3d011682016040523d82523d6000602084013e610835565b606091505b5050905080610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610e5d565b60405180910390fd5b5050565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806108ea8361091a565b90506000670de0b6b3a764000085836109039190610e7d565b61090d9190610f06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610fc4565b5050509150506402540be400816109b2919061103f565b915050919050565b828054828255906000526020600020908101928215610a33579160200282015b82811115610a325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109da565b5b509050610a409190610a44565b5090565b5b80821115610a5d576000816000905550600101610a45565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b8114610aac57600080fd5b50565b600081359050610abe81610a98565b92915050565b600060208284031215610ada57610ad9610a61565b5b6000610ae884828501610aaf565b91505092915050565b6000819050919050565b610b0481610af1565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610af1565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b66610a61565b5b6000610b7584828501610b3c565b91505092915050565b610b8781610a86565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b6000819050919050565b6000610bcd610bc8610bc384610a66565b610ba8565b610a66565b9050919050565b6000610bdf82610bb2565b9050919050565b6000610bf182610bd4565b9050919050565b610c0181610be6565b82525050565b6000602082019050610c1c6000830184610bf8565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c69601b83610c22565b9150610c7482610c33565b602082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd982610af1565b9150610ce483610af1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5e82610af1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9157610d90610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de6600083610dcb565b9150610df182610dd6565b600082019050919050565b6000610e0782610dd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e47600b83610c22565b9150610e5282610e11565b602082019050919050565b60006020820190508181036000830152610e7681610e3a565b9050919050565b6000610e8882610af1565b9150610e9383610af1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc57610ecb610c9f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1182610af1565b9150610f1c83610af1565b925082610f2c57610f2b610ed7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5681610f37565b8114610f6157600080fd5b50565b600081519050610f7381610f4d565b92915050565b6000819050919050565b610f8c81610f79565b8114610f9757600080fd5b50565b600081519050610fa981610f83565b92915050565b600081519050610fbe81610b25565b92915050565b600080600080600060a08688031215610fe057610fdf610a61565b5b6000610fee88828901610f64565b9550506020610fff88828901610f9a565b945050604061101088828901610faf565b935050606061102188828901610faf565b925050608061103288828901610f64565b9150509295509295909350565b600061104a82610f79565b915061105583610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109457611093610c9f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d1576110d0610c9f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110e5761110d610c9f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114b5761114a610c9f565b5b82820290509291505056fea2646970667358221220983805d0a7c6358ee166681394438313deda18195c03a7694d6bb4cd84ed4edc64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610140578063b60d42881461016b578063cab865f114610175578063fe0174bd146101a05761008e565b806335ff018c146100985780633726102d146100d55780633ccfd60b1461011257806367bf350b146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac4565b610305565b6040516100cc9190610b0a565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b51565b61034d565b6040516101099190610b8d565b60405180910390f35b34801561011e57600080fd5b50610127610395565b005b34801561013557600080fd5b5061013e6105d7565b005b34801561014c57600080fd5b5061015561087d565b6040516101629190610b0a565b60405180910390f35b6101736101cb565b005b34801561018157600080fd5b5061018a61088a565b6040516101979190610c07565b60405180910390f35b3480156101ac57600080fd5b506101b56108b4565b6040516101c29190610b8d565b60405180910390f35b6802b5e3af16b188000061020a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108de90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c7f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cce565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061036357610362610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c75760006001828154811061044257610441610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104bf90610d53565b91505061041f565b50600067ffffffffffffffff8111156104e3576104e2610d9c565b5b6040519080825280602002602001820160405280156105115781602001602082028036833780820191505090505b50600190805190602001906105279291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054e90610dfc565b60006040518083038185875af1925050503d806000811461058b576040519150601f19603f3d011682016040523d82523d6000602084013e610590565b606091505b50509050806105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90610e5d565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610698575b5050505050905060005b815181101561076c57600082828151811061070a57610709610d24565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076490610d53565b9150506106ec565b50600067ffffffffffffffff81111561078857610787610d9c565b5b6040519080825280602002602001820160405280156107b65781602001602082028036833780820191505090505b50600190805190602001906107cc9291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f390610dfc565b60006040518083038185875af1925050503d8060008114610830576040519150601f19603f3d011682016040523d82523d6000602084013e610835565b606091505b5050905080610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610e5d565b60405180910390fd5b5050565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806108ea8361091a565b90506000670de0b6b3a764000085836109039190610e7d565b61090d9190610f06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610fc4565b5050509150506402540be400816109b2919061103f565b915050919050565b828054828255906000526020600020908101928215610a33579160200282015b82811115610a325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109da565b5b509050610a409190610a44565b5090565b5b80821115610a5d576000816000905550600101610a45565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b8114610aac57600080fd5b50565b600081359050610abe81610a98565b92915050565b600060208284031215610ada57610ad9610a61565b5b6000610ae884828501610aaf565b91505092915050565b6000819050919050565b610b0481610af1565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610af1565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b66610a61565b5b6000610b7584828501610b3c565b91505092915050565b610b8781610a86565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b6000819050919050565b6000610bcd610bc8610bc384610a66565b610ba8565b610a66565b9050919050565b6000610bdf82610bb2565b9050919050565b6000610bf182610bd4565b9050919050565b610c0181610be6565b82525050565b6000602082019050610c1c6000830184610bf8565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c69601b83610c22565b9150610c7482610c33565b602082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd982610af1565b9150610ce483610af1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5e82610af1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9157610d90610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de6600083610dcb565b9150610df182610dd6565b600082019050919050565b6000610e0782610dd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e47600b83610c22565b9150610e5282610e11565b602082019050919050565b60006020820190508181036000830152610e7681610e3a565b9050919050565b6000610e8882610af1565b9150610e9383610af1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc57610ecb610c9f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1182610af1565b9150610f1c83610af1565b925082610f2c57610f2b610ed7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5681610f37565b8114610f6157600080fd5b50565b600081519050610f7381610f4d565b92915050565b6000819050919050565b610f8c81610f79565b8114610f9757600080fd5b50565b600081519050610fa981610f83565b92915050565b600081519050610fbe81610b25565b92915050565b600080600080600060a08688031215610fe057610fdf610a61565b5b6000610fee88828901610f64565b9550506020610fff88828901610f9a565b945050604061101088828901610faf565b935050606061102188828901610faf565b925050608061103288828901610f64565b9150509295509295909350565b600061104a82610f79565b915061105583610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109457611093610c9f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d1576110d0610c9f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110e5761110d610c9f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114b5761114a610c9f565b5b82820290509291505056fea2646970667358221220983805d0a7c6358ee166681394438313deda18195c03a7694d6bb4cd84ed4edc64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_pricefeedaddress",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}